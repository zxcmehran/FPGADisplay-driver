/**
 *
 * FPGA Display Handler IP Core By Mehran Ahadi (http://mehran.ahadi.me)
 * This IP allows you to draw shapes and print texts on VGA screen.
 * Copyright (C) 2015-2016  Mehran Ahadi
 * This work is released under MIT License.
 *
 * Driver Header File
 */
 
//////////////////////////////////////////////////////////////////////////////
// Version:           1.00.a
// Description:       display_handler Driver Header File
//////////////////////////////////////////////////////////////////////////////

#ifndef DISPLAY_HANDLER_H
#define DISPLAY_HANDLER_H

/***************************** Include Files *******************************/

#include "xbasic_types.h"
#include "xstatus.h"
#include "xio.h"


////////////////////////////// Initializers //////////////////////////////

/**
 * Initializer. Set base address of display memory address. Required for operation.
 *
 * @param	Xuint32	baseaddr
 */
void setBaseAddr(unsigned long baseaddr);

/**
 * Console section initializer. Used by printString() function.
 * Console section is placed on end of screen. By default it has 3 lines.
 * You can set desired line counts. Maximum value of 30 lines can fill entire screen.
 *
 * @param	count	Line count. From 1 to 30
 */
void setLineCount(int count);

/**
 * Set Display Resolution. Defaults on 640x480
 *
 * @param	x
 * @param	y
 */
void setResolution(int x, int y);

////////////////////////////// Basic functions //////////////////////////////

/**
 * Set a pixel on
 *
 * @param	x
 * @param	y
 */
void pixel_set(unsigned int x, unsigned int y);

/**
 * Set a pixel off
 *
 * @param	x
 * @param	y
 */
void pixel_clear(unsigned int x, unsigned int y);

/**
 * Get a pixel value
 *
 * @param	x
 * @param	y
 * @return	An unsigned char containing 0 or 1
 */
unsigned char pixel_get(unsigned int x, unsigned int y);

/**
 * Dumps video memory through RS232
 */
void dump();

////////////////////////////// Geometric objects //////////////////////////////

/**
 * Draw a line from (x0,y0) to (x1,y1)
 *
 * @param	x0
 * @param	y0
 * @param	x1
 * @param	y1
 */
void line(unsigned int x0, unsigned int y0, unsigned int x1, unsigned int y1);

/**
 * Draw a filled triangle with (x0,y0), (x1,y1) and (x2,y2) verticles
 *
 * @param	x0
 * @param	y0
 * @param	x1
 * @param	y1
 * @param	x2
 * @param	y2
 */
void triangle(	unsigned int x0, unsigned int y0,
				unsigned int x1, unsigned int y1, 
				unsigned int x2, unsigned int y2);

/**
 * Draw a filled rectangle with (x0,y0), (x1,y1), (x2,y2) and (x3,y3) verticles
 * Please note that it's only capable of drawing convex rectangles.
 * You can use several triangles for drawing concave rectangles.
 *
 * @param	x0
 * @param	y0
 * @param	x1
 * @param	y1
 * @param	x2
 * @param	y2
 * @param	x3
 * @param	y3
 */
void rectangle(	unsigned int x0, unsigned int y0,
				unsigned int x1, unsigned int y1, 
				unsigned int x2, unsigned int y2,
				unsigned int x3, unsigned int y3);

/**
 * Draw a filled circle centered on (x0,y0) with specified radius
 *
 * @param	x0
 * @param	y0
 * @param	radius
 */
void circle(unsigned int x0, unsigned int y0, unsigned int radius);

/**
 * Draw an unfilled circle centered on (x0,y0) with specified radius
 *
 * @param	x0
 * @param	y0
 * @param	radius
 */
void circleUnfilled(unsigned int x0, unsigned int y0, unsigned int radius);

////////////////////////////// Absolutely positioned text printing //////////////////////////////

/**
 * Print a 8x16 character on (x,y)
 * Capable of printing ASCII characters from code 32 to 127.
 *
 * @param	char	c	Character to pring
 * @param	x
 * @param	y
 */
void printCharOn(char c, unsigned int x, unsigned int y);

/**
 * Print a string of characters on (x,y)
 * Capable of printing ASCII characters from code 32 to 127.
 *
 * @param	char*	chars	String to print
 * @param	x
 * @param	y
 */
void printStringOn(char* chars, unsigned int x, unsigned int y);

////////////////////////////// Linear text printing //////////////////////////////

/**
 * Print a string of characters on end of console area.
 * Capable of printing ASCII characters from code 32 to 127
 * Supports \r, \n and \t control characters.
 *
 * @param	char*	chars	String to print
 */
void printString(char* chars);

////////////////////////////// Utility functions //////////////////////////////

unsigned int _abs (int a);

void _tripart(unsigned int x0, unsigned int y0,
		unsigned int x1, unsigned int y1, 
		unsigned int x2, unsigned int y2);

void _shiftLineUp();


////////////////////////////// Charmap initialization //////////////////////////////

static char display_handler_charmap[1536][8] = {
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00001000",
	"00001000",
	"00001000",
	"00001000",
	"00001000",
	"00000000",
	"00000000",
	"00001000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00110110",
	"00110110",
	"00100100",
	"00100100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00010010",
	"00010010",
	"00100100",
	"01111110",
	"00100100",
	"00100100",
	"01111110",
	"00100100",
	"01001000",
	"01001000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00001000",
	"00011100",
	"00100100",
	"00100000",
	"00011000",
	"00000100",
	"00100100",
	"00111000",
	"00001000",
	"00001000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00100000",
	"01010000",
	"00100000",
	"00001100",
	"01110000",
	"00001000",
	"00010100",
	"00001000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00001110",
	"00010000",
	"00010000",
	"00011000",
	"00101010",
	"00100100",
	"00011110",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000100",
	"00000100",
	"00001000",
	"00001000",
	"00001000",
	"00001000",
	"00001000",
	"00001000",
	"00000100",
	"00000100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00100000",
	"00100000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00100000",
	"00100000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00001000",
	"00111110",
	"00001000",
	"00010100",
	"00010100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00001000",
	"00001000",
	"00001000",
	"01111111",
	"00001000",
	"00001000",
	"00001000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00011000",
	"00010000",
	"00110000",
	"00100000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01111110",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00011000",
	"00011000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000100",
	"00000100",
	"00001000",
	"00001000",
	"00010000",
	"00010000",
	"00100000",
	"00100000",
	"01000000",
	"01000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00111100",
	"01000010",
	"01000010",
	"01000010",
	"01000010",
	"01000010",
	"01000010",
	"00111100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00001000",
	"00111000",
	"00001000",
	"00001000",
	"00001000",
	"00001000",
	"00001000",
	"00111110",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00111000",
	"01000100",
	"00000100",
	"00001000",
	"00010000",
	"00100000",
	"01000100",
	"01111100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00111000",
	"01000100",
	"00000100",
	"00011000",
	"00000100",
	"00000100",
	"01000100",
	"00111000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00001100",
	"00010100",
	"00100100",
	"00100100",
	"01111110",
	"00000100",
	"00000100",
	"00001110",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00111110",
	"00100000",
	"00100000",
	"00111100",
	"00000010",
	"00000010",
	"01000010",
	"00111100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00001110",
	"00010000",
	"00100000",
	"00111100",
	"00100010",
	"00100010",
	"00100010",
	"00011100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01111110",
	"01000010",
	"00000010",
	"00000100",
	"00000100",
	"00001000",
	"00001000",
	"00001000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00111100",
	"01000010",
	"01000010",
	"00111100",
	"01000010",
	"01000010",
	"01000010",
	"00111100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00111100",
	"01000010",
	"01000010",
	"01000010",
	"00111110",
	"00000010",
	"00000100",
	"01111000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00011000",
	"00011000",
	"00000000",
	"00000000",
	"00011000",
	"00011000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00011000",
	"00011000",
	"00000000",
	"00000000",
	"00011000",
	"00110000",
	"00100000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000010",
	"00001100",
	"00010000",
	"01100000",
	"00010000",
	"00001100",
	"00000010",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01111110",
	"00000000",
	"01111110",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01000000",
	"00110000",
	"00001000",
	"00000110",
	"00001000",
	"00110000",
	"01000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00011100",
	"00100010",
	"00000010",
	"00000010",
	"00000100",
	"00001000",
	"00000000",
	"00011000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00111000",
	"01000100",
	"01000100",
	"01001100",
	"01010100",
	"01010100",
	"01001100",
	"01000000",
	"01000100",
	"00111000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00011000",
	"00001000",
	"00010100",
	"00010100",
	"00010100",
	"00011100",
	"00100010",
	"01110111",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01111100",
	"00100010",
	"00100010",
	"00111100",
	"00100010",
	"00100010",
	"00100010",
	"01111100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00011110",
	"00100010",
	"01000000",
	"01000000",
	"01000000",
	"01000000",
	"00100010",
	"00011100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01111000",
	"00100100",
	"00100010",
	"00100010",
	"00100010",
	"00100010",
	"00100100",
	"01111000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01111110",
	"00100010",
	"00101000",
	"00111000",
	"00101000",
	"00100000",
	"00100010",
	"01111110",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01111110",
	"00100010",
	"00101000",
	"00111000",
	"00101000",
	"00100000",
	"00100000",
	"01110000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00011110",
	"00100010",
	"01000000",
	"01000000",
	"01000111",
	"01000010",
	"00100010",
	"00011100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01110111",
	"00100010",
	"00100010",
	"00111110",
	"00100010",
	"00100010",
	"00100010",
	"01110111",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00111110",
	"00001000",
	"00001000",
	"00001000",
	"00001000",
	"00001000",
	"00001000",
	"00111110",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00011110",
	"00000100",
	"00000100",
	"00000100",
	"01000100",
	"01000100",
	"01000100",
	"00111000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01110111",
	"00100010",
	"00100100",
	"00101000",
	"00111000",
	"00100100",
	"00100010",
	"01110011",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01110000",
	"00100000",
	"00100000",
	"00100000",
	"00100000",
	"00100010",
	"00100010",
	"01111110",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01110111",
	"00110110",
	"00110110",
	"00101010",
	"00101010",
	"00100010",
	"00100010",
	"01110111",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"11100111",
	"01100010",
	"01010010",
	"01010010",
	"01001010",
	"01001010",
	"01000110",
	"11100110",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00011100",
	"00100010",
	"01000001",
	"01000001",
	"01000001",
	"01000001",
	"00100010",
	"00011100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01111100",
	"00100010",
	"00100010",
	"00100010",
	"00111100",
	"00100000",
	"00100000",
	"01110000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00011100",
	"00100010",
	"01000001",
	"01000001",
	"01000001",
	"01000001",
	"00100010",
	"00011100",
	"00011111",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01111100",
	"00100010",
	"00100010",
	"00100010",
	"00111100",
	"00100100",
	"00100010",
	"01110001",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00111010",
	"01000110",
	"01000000",
	"00111100",
	"00000010",
	"00000010",
	"01100010",
	"01011100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01111111",
	"01001001",
	"00001000",
	"00001000",
	"00001000",
	"00001000",
	"00001000",
	"00011100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01110111",
	"00100010",
	"00100010",
	"00100010",
	"00100010",
	"00100010",
	"00100010",
	"00011100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"11100111",
	"01000010",
	"01000010",
	"00100100",
	"00100100",
	"00100100",
	"00011000",
	"00011000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01110111",
	"00100010",
	"00100010",
	"00101010",
	"00101010",
	"00101010",
	"00101010",
	"00010100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01110111",
	"00100010",
	"00010100",
	"00001000",
	"00001000",
	"00010100",
	"00100010",
	"01110111",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01110111",
	"00100010",
	"00010100",
	"00010100",
	"00001000",
	"00001000",
	"00001000",
	"00011100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00111110",
	"00100010",
	"00000100",
	"00001000",
	"00001000",
	"00010000",
	"00100010",
	"00111110",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00011100",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00011100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01000000",
	"01000000",
	"00100000",
	"00100000",
	"00010000",
	"00010000",
	"00010000",
	"00001000",
	"00001000",
	"00001000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01110000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"01110000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00010000",
	"00010000",
	"00101000",
	"01000100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"11111111",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00010000",
	"00001000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00111100",
	"01000010",
	"00111110",
	"01000010",
	"01000110",
	"00111011",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"11000000",
	"01000000",
	"01011100",
	"01100010",
	"01000010",
	"01000010",
	"01100010",
	"11011100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00111010",
	"01000110",
	"01000000",
	"01000000",
	"01000010",
	"00111100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000110",
	"00000010",
	"00111010",
	"01000110",
	"01000010",
	"01000010",
	"01000110",
	"00111011",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00111100",
	"01000010",
	"01111110",
	"01000000",
	"01000000",
	"00111110",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00001110",
	"00010000",
	"01111110",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"01111110",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00111011",
	"01000110",
	"01000010",
	"01000010",
	"01000110",
	"00111010",
	"00000010",
	"00111100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01100000",
	"00100000",
	"00101100",
	"00110010",
	"00100010",
	"00100010",
	"00100010",
	"01110111",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00001000",
	"00000000",
	"00111000",
	"00001000",
	"00001000",
	"00001000",
	"00001000",
	"00111110",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00001000",
	"00000000",
	"00111100",
	"00000100",
	"00000100",
	"00000100",
	"00000100",
	"00000100",
	"00000100",
	"01111000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01100000",
	"00100000",
	"00101111",
	"00100100",
	"00111000",
	"00101000",
	"00100100",
	"01100111",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00011000",
	"00001000",
	"00001000",
	"00001000",
	"00001000",
	"00001000",
	"00001000",
	"00111110",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"11010010",
	"01101101",
	"01001001",
	"01001001",
	"01001001",
	"11101101",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01101100",
	"00110010",
	"00100010",
	"00100010",
	"00100010",
	"01110111",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00111100",
	"01000010",
	"01000010",
	"01000010",
	"01000010",
	"00111100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01101100",
	"00110010",
	"00100010",
	"00100010",
	"00100010",
	"00111100",
	"00100000",
	"01110000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00111011",
	"01000110",
	"01000010",
	"01000010",
	"01000110",
	"00111010",
	"00000010",
	"00000111",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01101110",
	"00110000",
	"00100000",
	"00100000",
	"00100000",
	"01111100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00111110",
	"01000010",
	"00111100",
	"00000010",
	"01000010",
	"01111100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00100000",
	"01111100",
	"00100000",
	"00100000",
	"00100000",
	"00100010",
	"00011100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01100110",
	"00100010",
	"00100010",
	"00100010",
	"00100110",
	"00011011",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"11100111",
	"01000010",
	"00100100",
	"00100100",
	"00011000",
	"00011000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01110111",
	"00100010",
	"00101010",
	"00101010",
	"00101010",
	"00010100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01100110",
	"00100100",
	"00011000",
	"00011000",
	"00100100",
	"01100110",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"01110111",
	"00100010",
	"00100010",
	"00010100",
	"00010100",
	"00001000",
	"00001000",
	"00111000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00111110",
	"00100100",
	"00001000",
	"00010000",
	"00100010",
	"00111110",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00001000",
	"00010000",
	"00010000",
	"00010000",
	"00100000",
	"00010000",
	"00010000",
	"00010000",
	"00001000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00010000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00100000",
	"00010000",
	"00010000",
	"00010000",
	"00001000",
	"00010000",
	"00010000",
	"00010000",
	"00100000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00110010",
	"01001100",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"00000000",
	"11111111",
	"11111111",
	"11111111",
	"11111111",
	"11111111",
	"11111111",
	"11111111",
	"11111111",
	"11111111",
	"11111111",
	"11111111",
	"11111111",
	"11111111",
	"11111111",
	"11111111",
	"11111111"
};


//////////////////////////////////////////////////////////////////////////////////////////
////////////// Codes generated by XPS peripheral generator wizard are below //////////////
//////////////////////////////////////////////////////////////////////////////////////////

/************************** Constant Definitions ***************************/


/**
 * User Logic Slave Space Offsets
 * -- SLV_REG0 : user logic slave module register 0
 * -- SLV_REG1 : user logic slave module register 1
 */
#define DISPLAY_HANDLER_USER_SLV_SPACE_OFFSET (0x00000000)
#define DISPLAY_HANDLER_SLV_REG0_OFFSET (DISPLAY_HANDLER_USER_SLV_SPACE_OFFSET + 0x00000000)
#define DISPLAY_HANDLER_SLV_REG1_OFFSET (DISPLAY_HANDLER_USER_SLV_SPACE_OFFSET + 0x00000004)

/**************************** Type Definitions *****************************/


/***************** Macros (Inline Functions) Definitions *******************/

/**
 *
 * Write a value to a DISPLAY_HANDLER register. A 32 bit write is performed.
 * If the component is implemented in a smaller width, only the least
 * significant data is written.
 *
 * @param   BaseAddress is the base address of the DISPLAY_HANDLER device.
 * @param   RegOffset is the register offset from the base to write to.
 * @param   Data is the data written to the register.
 *
 * @return  None.
 *
 * @note
 * C-style signature:
 * 	void DISPLAY_HANDLER_mWriteReg(Xuint32 BaseAddress, unsigned RegOffset, Xuint32 Data)
 *
 */
#define DISPLAY_HANDLER_mWriteReg(BaseAddress, RegOffset, Data) \
 	XIo_Out32((BaseAddress) + (RegOffset), (Xuint32)(Data))

/**
 *
 * Read a value from a DISPLAY_HANDLER register. A 32 bit read is performed.
 * If the component is implemented in a smaller width, only the least
 * significant data is read from the register. The most significant data
 * will be read as 0.
 *
 * @param   BaseAddress is the base address of the DISPLAY_HANDLER device.
 * @param   RegOffset is the register offset from the base to write to.
 *
 * @return  Data is the data from the register.
 *
 * @note
 * C-style signature:
 * 	Xuint32 DISPLAY_HANDLER_mReadReg(Xuint32 BaseAddress, unsigned RegOffset)
 *
 */
#define DISPLAY_HANDLER_mReadReg(BaseAddress, RegOffset) \
 	XIo_In32((BaseAddress) + (RegOffset))


/**
 *
 * Write/Read 32 bit value to/from DISPLAY_HANDLER user logic slave registers.
 *
 * @param   BaseAddress is the base address of the DISPLAY_HANDLER device.
 * @param   RegOffset is the offset from the slave register to write to or read from.
 * @param   Value is the data written to the register.
 *
 * @return  Data is the data from the user logic slave register.
 *
 * @note
 * C-style signature:
 * 	void DISPLAY_HANDLER_mWriteSlaveRegn(Xuint32 BaseAddress, unsigned RegOffset, Xuint32 Value)
 * 	Xuint32 DISPLAY_HANDLER_mReadSlaveRegn(Xuint32 BaseAddress, unsigned RegOffset)
 *
 */
#define DISPLAY_HANDLER_mWriteSlaveReg0(BaseAddress, RegOffset, Value) \
 	XIo_Out32((BaseAddress) + (DISPLAY_HANDLER_SLV_REG0_OFFSET) + (RegOffset), (Xuint32)(Value))
#define DISPLAY_HANDLER_mWriteSlaveReg1(BaseAddress, RegOffset, Value) \
 	XIo_Out32((BaseAddress) + (DISPLAY_HANDLER_SLV_REG1_OFFSET) + (RegOffset), (Xuint32)(Value))

#define DISPLAY_HANDLER_mReadSlaveReg0(BaseAddress, RegOffset) \
 	XIo_In32((BaseAddress) + (DISPLAY_HANDLER_SLV_REG0_OFFSET) + (RegOffset))
#define DISPLAY_HANDLER_mReadSlaveReg1(BaseAddress, RegOffset) \
 	XIo_In32((BaseAddress) + (DISPLAY_HANDLER_SLV_REG1_OFFSET) + (RegOffset))

/**
 *
 * Write/Read 32 bit value to/from DISPLAY_HANDLER user logic memory (BRAM).
 *
 * @param   Address is the memory address of the DISPLAY_HANDLER device.
 * @param   Data is the value written to user logic memory.
 *
 * @return  The data from the user logic memory.
 *
 * @note
 * C-style signature:
 * 	void DISPLAY_HANDLER_mWriteMemory(Xuint32 Address, Xuint32 Data)
 * 	Xuint32 DISPLAY_HANDLER_mReadMemory(Xuint32 Address)
 *
 */
#define DISPLAY_HANDLER_mWriteMemory(Address, Data) \
 	XIo_Out32(Address, (Xuint32)(Data))
#define DISPLAY_HANDLER_mReadMemory(Address) \
 	XIo_In32(Address)

/************************** Function Prototypes ****************************/


/**
 *
 * Run a self-test on the driver/device. Note this may be a destructive test if
 * resets of the device are performed.
 *
 * If the hardware system is not built correctly, this function may never
 * return to the caller.
 *
 * @param   baseaddr_p is the base address of the DISPLAY_HANDLER instance to be worked on.
 *
 * @return
 *
 *    - XST_SUCCESS   if all self-test code passed
 *    - XST_FAILURE   if any self-test code failed
 *
 * @note    Caching must be turned off for this function to work.
 * @note    Self test may fail if data memory and device are not on the same bus.
 *
 */
XStatus DISPLAY_HANDLER_SelfTest(void * baseaddr_p);

#endif // DISPLAY_HANDLER_H
